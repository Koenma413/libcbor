<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="encoding_8c" kind="file">
    <compoundname>encoding.c</compoundname>
    <includes refid="encoding_8h" local="yes">encoding.h</includes>
    <includes refid="encoders_8h" local="yes">internal/encoders.h</includes>
    <incdepgraph>
      <node id="243">
        <label>stdbool.h</label>
      </node>
      <node id="244">
        <label>assert.h</label>
      </node>
      <node id="242">
        <label>stdint.h</label>
      </node>
      <node id="240">
        <label>stdlib.h</label>
      </node>
      <node id="239">
        <label>common.h</label>
        <link refid="common_8h"/>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
      </node>
      <node id="241">
        <label>stddef.h</label>
      </node>
      <node id="237">
        <label>src/cbor/encoding.c</label>
        <link refid="encoding.c"/>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
      </node>
      <node id="238">
        <label>encoding.h</label>
        <link refid="encoding_8h"/>
        <childnode refid="239" relation="include">
        </childnode>
      </node>
      <node id="246">
        <label>internal/encoders.h</label>
        <link refid="encoders_8h"/>
        <childnode refid="239" relation="include">
        </childnode>
      </node>
      <node id="245">
        <label>data.h</label>
        <link refid="data_8h"/>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="encoding_8c_1a6c970c1c3fe2a753d76ad7343b18fc43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_uint8</definition>
        <argsstring>(uint8_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_uint8</name>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
<para>Primitive encoder. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="11" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="11" bodyend="14"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a978187eb1d49113f35204e16638a0dfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_uint16</definition>
        <argsstring>(uint16_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_uint16</name>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="16" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="16" bodyend="19"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1abdc5b7670f02130ba5d0ffb01b25fab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_uint32</definition>
        <argsstring>(uint32_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_uint32</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="21" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="21" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a9bdbc2a0030ec8edd071a9036e7c17bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_uint64</definition>
        <argsstring>(uint64_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_uint64</name>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="26" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="26" bodyend="29"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1aa5fd377e949f8bf0e54d911341d5e23f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_uint</definition>
        <argsstring>(uint64_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_uint</name>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="31" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="31" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1ac5f38c2536db32249b853d5f41ac91b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_negint8</definition>
        <argsstring>(uint8_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_negint8</name>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="37" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a000a6bd597e43b3b438a5659db183f40" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_negint16</definition>
        <argsstring>(uint16_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_negint16</name>
        <param>
          <type>uint16_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="42" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1aaa7b2d79e956ca4ac9db8fc3d140d6d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_negint32</definition>
        <argsstring>(uint32_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_negint32</name>
        <param>
          <type>uint32_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="47" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a4553dcc867b95ecfd6eb0dae79f69d81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_negint64</definition>
        <argsstring>(uint64_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_negint64</name>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="52" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="52" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a6002fa0d83e5e59f995eabe5ecf157e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_negint</definition>
        <argsstring>(uint64_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_negint</name>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="57" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1acb1b57ebb4156007ddca6d724b9f794a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_bytestring_start</definition>
        <argsstring>(size_t length, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_bytestring_start</name>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="62" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="62" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a4352d769328811eaee8db575256f8a6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t _cbor_encode_byte</definition>
        <argsstring>(uint8_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>_cbor_encode_byte</name>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="67" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="67" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a72fd1996d81b30a81381707708aa186d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_indef_bytestring_start</definition>
        <argsstring>(unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_indef_bytestring_start</name>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="76" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="76" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1abb8a85db156a80932399cce55a0694f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_string_start</definition>
        <argsstring>(size_t length, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_string_start</name>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="81" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="81" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1ae5fc25aee8ee4bb8605e105227cb21f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_indef_string_start</definition>
        <argsstring>(unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_indef_string_start</name>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="86" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="86" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a614462c893ad375d880178f490e4d15f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_array_start</definition>
        <argsstring>(size_t length, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_array_start</name>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="91" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a8794b7d67dc4b94c7191ba97518472a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_indef_array_start</definition>
        <argsstring>(unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_indef_array_start</name>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="96" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a1dc2d5e72fc65fa52120bd9e20164277" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_map_start</definition>
        <argsstring>(size_t length, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_map_start</name>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="101" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a56b2ad41ccc983fce2dbaae97beb760d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_indef_map_start</definition>
        <argsstring>(unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_indef_map_start</name>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="106" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="106" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a41bdb572cc73d9648f4c13e8465b1dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_tag</definition>
        <argsstring>(uint64_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_tag</name>
        <param>
          <type>uint64_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="111" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="111" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1af81d6fb8076d7b413b1a520ff971cae9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_bool</definition>
        <argsstring>(bool value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_bool</name>
        <param>
          <type>bool</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="116" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="116" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1ad16f49267d664b734ac6bd416064a8e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_null</definition>
        <argsstring>(unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_null</name>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="121" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a7330d8c4f55a054151064acea0da181c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_undef</definition>
        <argsstring>(unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_undef</name>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="126" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="126" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a6d25549fbb8a0e147f2d2454a1da0bfa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_half</definition>
        <argsstring>(float value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_half</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="131" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="131" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1add2c3c8759e19e86cbf9ae31dd897ee1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_single</definition>
        <argsstring>(float value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_single</name>
        <param>
          <type>float</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="155" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a772417a925ae556f40b6811d3fba7834" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_double</definition>
        <argsstring>(double value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_double</name>
        <param>
          <type>double</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="161" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1ad7599c3f22138b063730b6f08637392c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_break</definition>
        <argsstring>(unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_break</name>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="166" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="166" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="encoding_8c_1a1d955e4c1bb4a2e3977b7387c1fafe01" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t cbor_encode_ctrl</definition>
        <argsstring>(uint8_t value, unsigned char *buffer, size_t buffer_size)</argsstring>
        <name>cbor_encode_ctrl</name>
        <param>
          <type>uint8_t</type>
          <declname>value</declname>
        </param>
        <param>
          <type>unsigned char *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/encoding.c" line="171" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/encoding.c" bodystart="171" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014-2015<sp/>Pavel<sp/>Kalvoda<sp/>&lt;me@pavelkalvoda.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>libcbor<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>MIT<sp/>license.<sp/>See<sp/>LICENSE<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="encoding_8h" kindref="compound">encoding.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="encoders_8h" kindref="compound">internal/encoders.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11" refid="encoding_8h_1afea0835d5129909ae6ccb4cbfc015970" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a6c970c1c3fe2a753d76ad7343b18fc43" kindref="member">cbor_encode_uint8</ref>(uint8_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a32eb27ea8f535e166b40c7be50ab8eb1" kindref="member">_cbor_encode_uint8</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0x00);</highlight></codeline>
<codeline lineno="14"><highlight class="normal">}</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16" refid="encoding_8h_1a56bfab261e1beaee3d41faf6463b04bf" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a978187eb1d49113f35204e16638a0dfa" kindref="member">cbor_encode_uint16</ref>(uint16_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a18c7f670aae9fa3f03a2ba58e6590c43" kindref="member">_cbor_encode_uint16</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0x00);</highlight></codeline>
<codeline lineno="19"><highlight class="normal">}</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="encoding_8h_1a90ad4b026bc13f3807e4b89409773f0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1abdc5b7670f02130ba5d0ffb01b25fab2" kindref="member">cbor_encode_uint32</ref>(uint32_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a58efe8377be9b98013828ed27752e212" kindref="member">_cbor_encode_uint32</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0x00);</highlight></codeline>
<codeline lineno="24"><highlight class="normal">}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="encoding_8h_1a4a235fd97a2a4d13ba6d3c4306c6a643" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a9bdbc2a0030ec8edd071a9036e7c17bb" kindref="member">cbor_encode_uint64</ref>(uint64_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="27"><highlight class="normal">{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a6770d92d21edd8100cfd48ab443fc566" kindref="member">_cbor_encode_uint64</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0x00);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="encoding_8h_1a7863aaacf5c10dbc7770010250525ed3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1aa5fd377e949f8bf0e54d911341d5e23f" kindref="member">cbor_encode_uint</ref>(uint64_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="32"><highlight class="normal">{</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1ad0b03bdce1727977d8c8307e2a91590a" kindref="member">_cbor_encode_uint</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0x00);</highlight></codeline>
<codeline lineno="34"><highlight class="normal">}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="encoding_8h_1aa850f2be3940fbc309fc9f611ac2989b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1ac5f38c2536db32249b853d5f41ac91b3" kindref="member">cbor_encode_negint8</ref>(uint8_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="38"><highlight class="normal">{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a32eb27ea8f535e166b40c7be50ab8eb1" kindref="member">_cbor_encode_uint8</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0x20);</highlight></codeline>
<codeline lineno="40"><highlight class="normal">}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="encoding_8h_1a0df96946a16ed6ab94d45adb7b1a14d9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a000a6bd597e43b3b438a5659db183f40" kindref="member">cbor_encode_negint16</ref>(uint16_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="43"><highlight class="normal">{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a18c7f670aae9fa3f03a2ba58e6590c43" kindref="member">_cbor_encode_uint16</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0x20);</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="encoding_8h_1ac1854fff9cbe4be7fa08fd311d851922" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1aaa7b2d79e956ca4ac9db8fc3d140d6d9" kindref="member">cbor_encode_negint32</ref>(uint32_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="48"><highlight class="normal">{</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a58efe8377be9b98013828ed27752e212" kindref="member">_cbor_encode_uint32</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0x20);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="encoding_8h_1a1d803ca867e14739665283bee5b66b58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a4553dcc867b95ecfd6eb0dae79f69d81" kindref="member">cbor_encode_negint64</ref>(uint64_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="53"><highlight class="normal">{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a6770d92d21edd8100cfd48ab443fc566" kindref="member">_cbor_encode_uint64</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0x20);</highlight></codeline>
<codeline lineno="55"><highlight class="normal">}</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="encoding_8h_1a1cc1e5a1b1ee934291abcfef75626616" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a6002fa0d83e5e59f995eabe5ecf157e9" kindref="member">cbor_encode_negint</ref>(uint64_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="58"><highlight class="normal">{</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1ad0b03bdce1727977d8c8307e2a91590a" kindref="member">_cbor_encode_uint</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0x20);</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="encoding_8h_1a2105cee299618a9598bc39f5ae215c0b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1acb1b57ebb4156007ddca6d724b9f794a" kindref="member">cbor_encode_bytestring_start</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="63"><highlight class="normal">{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1ad0b03bdce1727977d8c8307e2a91590a" kindref="member">_cbor_encode_uint</ref>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>length,<sp/>buffer,<sp/>buffer_size,<sp/>0x40);</highlight></codeline>
<codeline lineno="65"><highlight class="normal">}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="encoding_8c_1a4352d769328811eaee8db575256f8a6d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a4352d769328811eaee8db575256f8a6d" kindref="member">_cbor_encode_byte</ref>(uint8_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="68"><highlight class="normal">{</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer_size<sp/>&gt;=<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer[0]<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="encoding_8h_1a180ccc6318bf86af67bfbdd0955548df" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a72fd1996d81b30a81381707708aa186d" kindref="member">cbor_encode_indef_bytestring_start</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="77"><highlight class="normal">{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a4352d769328811eaee8db575256f8a6d" kindref="member">_cbor_encode_byte</ref>(0x5F,<sp/>buffer,<sp/>buffer_size);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="encoding_8h_1a58f3f82978563d732a03d4b585a1a9ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1abb8a85db156a80932399cce55a0694f6" kindref="member">cbor_encode_string_start</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="82"><highlight class="normal">{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1ad0b03bdce1727977d8c8307e2a91590a" kindref="member">_cbor_encode_uint</ref>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>length,<sp/>buffer,<sp/>buffer_size,<sp/>0x60);</highlight></codeline>
<codeline lineno="84"><highlight class="normal">}</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="encoding_8h_1a743eaba2ad48bc23acbf567e1eb75eac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1ae5fc25aee8ee4bb8605e105227cb21f5" kindref="member">cbor_encode_indef_string_start</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="87"><highlight class="normal">{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a4352d769328811eaee8db575256f8a6d" kindref="member">_cbor_encode_byte</ref>(0x7F,<sp/>buffer,<sp/>buffer_size);</highlight></codeline>
<codeline lineno="89"><highlight class="normal">}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="encoding_8h_1a7cf3eb01b259b2e4ea9fddd4b1a37d9a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a614462c893ad375d880178f490e4d15f" kindref="member">cbor_encode_array_start</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1ad0b03bdce1727977d8c8307e2a91590a" kindref="member">_cbor_encode_uint</ref>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>length,<sp/>buffer,<sp/>buffer_size,<sp/>0x80);</highlight></codeline>
<codeline lineno="94"><highlight class="normal">}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="encoding_8h_1a12630f19ed6040b193ac79b66b3082a4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a8794b7d67dc4b94c7191ba97518472a6" kindref="member">cbor_encode_indef_array_start</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="97"><highlight class="normal">{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a4352d769328811eaee8db575256f8a6d" kindref="member">_cbor_encode_byte</ref>(0x9F,<sp/>buffer,<sp/>buffer_size);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="encoding_8h_1a89ca7a5834e479190406de4fa886a975" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a1dc2d5e72fc65fa52120bd9e20164277" kindref="member">cbor_encode_map_start</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1ad0b03bdce1727977d8c8307e2a91590a" kindref="member">_cbor_encode_uint</ref>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>length,<sp/>buffer,<sp/>buffer_size,<sp/>0xA0);</highlight></codeline>
<codeline lineno="104"><highlight class="normal">}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="encoding_8h_1a7c73f8226b908bc2e917e7d0fa3125c7" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a56b2ad41ccc983fce2dbaae97beb760d" kindref="member">cbor_encode_indef_map_start</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="107"><highlight class="normal">{</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a4352d769328811eaee8db575256f8a6d" kindref="member">_cbor_encode_byte</ref>(0xBF,<sp/>buffer,<sp/>buffer_size);</highlight></codeline>
<codeline lineno="109"><highlight class="normal">}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="encoding_8h_1a153f903a2763439d0be4dc13d8e01b81" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a41bdb572cc73d9648f4c13e8465b1dcb" kindref="member">cbor_encode_tag</ref>(uint64_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1ad0b03bdce1727977d8c8307e2a91590a" kindref="member">_cbor_encode_uint</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0xC0);</highlight></codeline>
<codeline lineno="114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="encoding_8h_1a9c298069fd256fe98007f8ebb2c3b7e4" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1af81d6fb8076d7b413b1a520ff971cae9" kindref="member">cbor_encode_bool</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value<sp/>?<sp/><ref refid="encoding_8c_1a4352d769328811eaee8db575256f8a6d" kindref="member">_cbor_encode_byte</ref>(0xF5,<sp/>buffer,<sp/>buffer_size)<sp/>:<sp/><ref refid="encoding_8c_1a4352d769328811eaee8db575256f8a6d" kindref="member">_cbor_encode_byte</ref>(0xF4,<sp/>buffer,<sp/>buffer_size);</highlight></codeline>
<codeline lineno="119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="encoding_8h_1a01795a392b9945c416ee82f66ff5d50f" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1ad16f49267d664b734ac6bd416064a8e2" kindref="member">cbor_encode_null</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a4352d769328811eaee8db575256f8a6d" kindref="member">_cbor_encode_byte</ref>(0xF6,<sp/>buffer,<sp/>buffer_size);</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126" refid="encoding_8h_1ace6e55205c8e7fb624cb1f39d46f1479" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a7330d8c4f55a054151064acea0da181c" kindref="member">cbor_encode_undef</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a4352d769328811eaee8db575256f8a6d" kindref="member">_cbor_encode_byte</ref>(0xF7,<sp/>buffer,<sp/>buffer_size);</highlight></codeline>
<codeline lineno="129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131" refid="encoding_8h_1a570e080b214be14a3263494b3d5d19f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a6d25549fbb8a0e147f2d2454a1da0bfa" kindref="member">cbor_encode_half</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="132"><highlight class="normal">{</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Assuming<sp/>value<sp/>is<sp/>normalized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>val<sp/>=<sp/>((</highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal"><ref refid="union__cbor__float__helper" kindref="compound">_cbor_float_helper</ref>)<sp/>{.as_float<sp/>=<sp/>value}).as_uint;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>uint16_t<sp/>res;</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>uint8_t<sp/>exp<sp/>=<sp/>(val<sp/>&amp;<sp/>0x7F800000)<sp/>&gt;&gt;<sp/>23;<sp/></highlight><highlight class="comment">/*<sp/>0b0111_1111_1000_0000_0000_0000_0000_0000<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>mant<sp/>=<sp/>val<sp/>&amp;<sp/>0x7FFFFF;<sp/></highlight><highlight class="comment">/*<sp/>0b0000_0000_0111_1111_1111_1111_1111_1111<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exp<sp/>==<sp/>0xFF)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Infinity<sp/>or<sp/>NaNs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/>value)</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>(uint16_t)<sp/>0x00e700;<sp/></highlight><highlight class="comment">/*<sp/>Not<sp/>IEEE<sp/>semantics<sp/>-<sp/>required<sp/>by<sp/>CBOR<sp/>[s.<sp/>3.9]<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>(val<sp/>&amp;<sp/>0x80000000)<sp/>&gt;&gt;<sp/>16<sp/>|<sp/>0x7C00<sp/>|<sp/>(mant<sp/>?<sp/>1<sp/>:<sp/>0)<sp/>&lt;&lt;<sp/>15;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exp<sp/>==<sp/>0x00)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Zeroes<sp/>or<sp/>subnorms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>(val<sp/>&amp;<sp/>0x80000000)<sp/>&gt;&gt;<sp/>16<sp/>|<sp/>(uint16_t)<sp/>(mant<sp/>&gt;&gt;<sp/>13);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Normal<sp/>numbers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exp<sp/>-=<sp/>127;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(exp<sp/>&gt;<sp/>15)</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">/*<sp/>No<sp/>way<sp/>we<sp/>can<sp/>represent<sp/>magnitude<sp/>in<sp/>normalized<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/>(val<sp/>&amp;<sp/>0x80000000)<sp/>&gt;&gt;<sp/>16<sp/>|<sp/>((exp<sp/>+<sp/>15)<sp/>&lt;&lt;<sp/>10)<sp/>|<sp/>(uint16_t)<sp/>(mant<sp/>&gt;&gt;<sp/>13);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a18c7f670aae9fa3f03a2ba58e6590c43" kindref="member">_cbor_encode_uint16</ref>(res,<sp/>buffer,<sp/>buffer_size,<sp/>0xE0);</highlight></codeline>
<codeline lineno="153"><highlight class="normal">}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="encoding_8h_1a7ea12535f26f24032ea9e0975cac3cec" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1add2c3c8759e19e86cbf9ae31dd897ee1" kindref="member">cbor_encode_single</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="156"><highlight class="normal">{</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a58efe8377be9b98013828ed27752e212" kindref="member">_cbor_encode_uint32</ref>(((</highlight><highlight class="keyword">union</highlight><highlight class="normal"><sp/><ref refid="union__cbor__float__helper" kindref="compound">_cbor_float_helper</ref>)<sp/>{.as_float<sp/>=<sp/>value}).as_uint,<sp/>buffer,<sp/>buffer_size,<sp/>0xE0);</highlight></codeline>
<codeline lineno="159"><highlight class="normal">}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="encoding_8h_1a63da011839918fac84a7bdef9f0f24f2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a772417a925ae556f40b6811d3fba7834" kindref="member">cbor_encode_double</ref>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a6770d92d21edd8100cfd48ab443fc566" kindref="member">_cbor_encode_uint64</ref>(((</highlight><highlight class="keyword">union</highlight><highlight class="normal"><sp/><ref refid="union__cbor__double__helper" kindref="compound">_cbor_double_helper</ref>)<sp/>{.as_double<sp/>=<sp/>value}).as_uint,<sp/>buffer,<sp/>buffer_size,<sp/>0xE0);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">}</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166" refid="encoding_8h_1aaefd57d48643806d1b5bc7ba304f9060" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1ad7599c3f22138b063730b6f08637392c" kindref="member">cbor_encode_break</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="167"><highlight class="normal">{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a4352d769328811eaee8db575256f8a6d" kindref="member">_cbor_encode_byte</ref>(0xFF,<sp/>buffer,<sp/>buffer_size);</highlight></codeline>
<codeline lineno="169"><highlight class="normal">}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="encoding_8h_1a9cfc3c3ca85e6acb7258cf0fb33b3543" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="encoding_8c_1a1d955e4c1bb4a2e3977b7387c1fafe01" kindref="member">cbor_encode_ctrl</ref>(uint8_t<sp/>value,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/>buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_size)</highlight></codeline>
<codeline lineno="172"><highlight class="normal">{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="encoders_8c_1a32eb27ea8f535e166b40c7be50ab8eb1" kindref="member">_cbor_encode_uint8</ref>(value,<sp/>buffer,<sp/>buffer_size,<sp/>0xE0);</highlight></codeline>
<codeline lineno="174"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/pjk/project/libcbor/src/cbor/encoding.c"/>
  </compounddef>
</doxygen>
