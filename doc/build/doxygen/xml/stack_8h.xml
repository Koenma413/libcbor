<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="stack_8h" kind="file">
    <compoundname>stack.h</compoundname>
    <includes refid="common_8h" local="yes">../common.h</includes>
    <includedby refid="builder__callbacks_8h" local="yes">src/cbor/internal/builder_callbacks.h</includedby>
    <includedby refid="stack_8c" local="yes">src/cbor/internal/stack.c</includedby>
    <incdepgraph>
      <node id="380">
        <label>stdbool.h</label>
      </node>
      <node id="381">
        <label>assert.h</label>
      </node>
      <node id="379">
        <label>stdint.h</label>
      </node>
      <node id="377">
        <label>stdlib.h</label>
      </node>
      <node id="376">
        <label>../common.h</label>
        <link refid="common_8h"/>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
        <childnode refid="381" relation="include">
        </childnode>
        <childnode refid="382" relation="include">
        </childnode>
      </node>
      <node id="378">
        <label>stddef.h</label>
      </node>
      <node id="375">
        <label>src/cbor/internal/stack.h</label>
        <link refid="stack.h"/>
        <childnode refid="376" relation="include">
        </childnode>
      </node>
      <node id="382">
        <label>data.h</label>
        <link refid="data_8h"/>
        <childnode refid="377" relation="include">
        </childnode>
        <childnode refid="378" relation="include">
        </childnode>
        <childnode refid="379" relation="include">
        </childnode>
        <childnode refid="380" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="387">
        <label>src/cbor/internal/stack.c</label>
        <link refid="stack_8c"/>
      </node>
      <node id="383">
        <label>src/cbor/internal/stack.h</label>
        <link refid="stack.h"/>
        <childnode refid="384" relation="include">
        </childnode>
        <childnode refid="387" relation="include">
        </childnode>
      </node>
      <node id="386">
        <label>src/cbor.c</label>
        <link refid="cbor_8c"/>
      </node>
      <node id="385">
        <label>src/cbor/internal/builder_callbacks.c</label>
        <link refid="builder__callbacks_8c"/>
      </node>
      <node id="384">
        <label>src/cbor/internal/builder_callbacks.h</label>
        <link refid="builder__callbacks_8h"/>
        <childnode refid="385" relation="include">
        </childnode>
        <childnode refid="386" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct__cbor__stack__record" prot="public">_cbor_stack_record</innerclass>
    <innerclass refid="struct__cbor__stack" prot="public">_cbor_stack</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="stack_8h_1a7702383747257f1df9c3ceda9fb9da58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="struct__cbor__stack" kindref="compound">_cbor_stack</ref></type>
        <definition>struct _cbor_stack _cbor_stack_init</definition>
        <argsstring>()</argsstring>
        <name>_cbor_stack_init</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/internal/stack.h" line="23" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/internal/stack.c" bodystart="10" bodyend="13"/>
      </memberdef>
      <memberdef kind="function" id="stack_8h_1a7ef944b8c6581c73fe7fbf678aa09f4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void _cbor_stack_pop</definition>
        <argsstring>(struct _cbor_stack *)</argsstring>
        <name>_cbor_stack_pop</name>
        <param>
          <type>struct <ref refid="struct__cbor__stack" kindref="compound">_cbor_stack</ref> *</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/internal/stack.h" line="32" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/internal/stack.c" bodystart="15" bodyend="21"/>
      </memberdef>
      <memberdef kind="function" id="stack_8h_1a76e5fdb5e3c5b6a35e928ee9e9310568" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="struct__cbor__stack__record" kindref="compound">_cbor_stack_record</ref> *</type>
        <definition>struct _cbor_stack_record* _cbor_stack_push</definition>
        <argsstring>(struct _cbor_stack *, cbor_item_t *, size_t)</argsstring>
        <name>_cbor_stack_push</name>
        <param>
          <type>struct <ref refid="struct__cbor__stack" kindref="compound">_cbor_stack</ref> *</type>
        </param>
        <param>
          <type><ref refid="structcbor__item__t" kindref="compound">cbor_item_t</ref> *</type>
        </param>
        <param>
          <type>size_t</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/pjk/project/libcbor/src/cbor/internal/stack.h" line="34" column="1" bodyfile="/home/pjk/project/libcbor/src/cbor/internal/stack.c" bodystart="23" bodyend="33"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2014-2015<sp/>Pavel<sp/>Kalvoda<sp/>&lt;me@pavelkalvoda.com&gt;</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>libcbor<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>MIT<sp/>license.<sp/>See<sp/>LICENSE<sp/>for<sp/>details.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>LIBCBOR_STACK_H</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>LIBCBOR_STACK_H</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../common.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="18" refid="struct__cbor__stack__record" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__cbor__stack__record" kindref="compound">_cbor_stack_record</ref><sp/>{</highlight></codeline>
<codeline lineno="19" refid="struct__cbor__stack__record_1aca7db1e610ee0983b0e24e081ee3e5dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__cbor__stack__record" kindref="compound">_cbor_stack_record</ref><sp/>*<ref refid="struct__cbor__stack__record_1aca7db1e610ee0983b0e24e081ee3e5dd" kindref="member">lower</ref>;</highlight></codeline>
<codeline lineno="20" refid="struct__cbor__stack__record_1a1a1d4be830fa1e0d9c5369cddccce47e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcbor__item__t" kindref="compound">cbor_item_t</ref><sp/>*<ref refid="struct__cbor__stack__record_1a1a1d4be830fa1e0d9c5369cddccce47e" kindref="member">item</ref>;</highlight></codeline>
<codeline lineno="21" refid="struct__cbor__stack__record_1a9b69c0ea00da449b080343a97c026cef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct__cbor__stack__record_1a9b69c0ea00da449b080343a97c026cef" kindref="member">subitems</ref>;</highlight></codeline>
<codeline lineno="22"><highlight class="normal">};</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="struct__cbor__stack" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__cbor__stack" kindref="compound">_cbor_stack</ref><sp/>{</highlight></codeline>
<codeline lineno="26" refid="struct__cbor__stack_1a559869a03a766ae041b1e385ceb34026" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__cbor__stack__record" kindref="compound">_cbor_stack_record</ref><sp/>*<ref refid="struct__cbor__stack_1a559869a03a766ae041b1e385ceb34026" kindref="member">top</ref>;</highlight></codeline>
<codeline lineno="27" refid="struct__cbor__stack_1aab7d9aefcd1c46603350a1d009c048d8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="struct__cbor__stack_1aab7d9aefcd1c46603350a1d009c048d8" kindref="member">size</ref>;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__cbor__stack" kindref="compound">_cbor_stack</ref><sp/><ref refid="stack_8h_1a7702383747257f1df9c3ceda9fb9da58" kindref="member">_cbor_stack_init</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="stack_8h_1a7ef944b8c6581c73fe7fbf678aa09f4c" kindref="member">_cbor_stack_pop</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__cbor__stack" kindref="compound">_cbor_stack</ref><sp/>*);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct__cbor__stack__record" kindref="compound">_cbor_stack_record</ref><sp/>*<ref refid="stack_8h_1a76e5fdb5e3c5b6a35e928ee9e9310568" kindref="member">_cbor_stack_push</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct__cbor__stack" kindref="compound">_cbor_stack</ref><sp/>*,<sp/><ref refid="structcbor__item__t" kindref="compound">cbor_item_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal">}</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//LIBCBOR_STACK_H</highlight></codeline>
    </programlisting>
    <location file="/home/pjk/project/libcbor/src/cbor/internal/stack.h"/>
  </compounddef>
</doxygen>
